
# Version 3

## Funktionaliteter

EDIT*- Söka efter program som innehåller söktermen i sitt programnamn, land eller stad.
*- Få upp alla program som sökresultat på söksidan

*- Möjlighet att sortera sökresultat i stigande/fallande ordning efter:
    - Bokstavsordning
    - Antagningspoöng

- Jämför-söksida
    - Sök efter programnamn och lägg till i en lista
    - Valda programs information visas i en tabell

- En detaljsida för ett program när man trycker på "läs mer".

EDIT*- "Land"-kort på indexsidan. Gör en automatisk sökning på landet (i sökfunktionen) när man trycker "visa program".

## Sidor

*- Index
*- Söksida
- Jämförsida
- Detaljsida

## Funktioner

Global funktion ------------------------
- render(element, parentElement) :: appendar alla element (sökresultat/bokmärkeskort/land-kort) i parentElement
- goToLink(url), går till URL

EventListener ------------------------
*- input för Searchbar, kallar på getProgrammesBySearchWords(input.value) vid keyup, vid enter kör saveSearchWord(input.value)

- "visa program"-knapp, kallar på saveCountrySearchWordtoLS("landet") och goToLink(söksida)

- "Läs mer"-knapp, kallar på saveProgrammeToURL(event(object){}) och goToLink(detaljsida)


Sök ------------------------
*- getProgrammesBySearchWords(input.value) :: programmes[{}], hämtar alla program där söktermen och searchWords[] 
    matchar programnamn, land och stad. Kallar på sortSearchResult(programmes[{}])

*- createProgrammeElements(programmes[{}]) :: DOM-elements, skapar element för de hämtade programmen (universitet, stad, nivå, termin, "läs mer"-knapp med eventlistener). Rensar element i sökresultaten. Kallar på render(DOM-element, sökresultatslista) i en forEach-loop

*- sortSearchResult(programmes[{}], sortKey = Bokstavsordning, sortOrder = stigande) :: programmes[{}], 
    sorterar programmes efter sortKey(Bokstavsordning/Antagningspoöng) i sortOrder(stigande/fallande). Kallar på createProgrammeElements(programmes[{}])

- saveSearchWord("input.value") :: DOM-element, pushar in input.value i searchWords[] och skapar DOM-element av input. 
    DOM-elementet skickas till render.

- removeSearchWord(e.target), tar bort e.target.parentElement, tar bort e.target.previousSiblingElement.textContent från searchWords[]

- getCountrySearchWordfromLS() :: countrySearchWord, tar emot countrySearchWord från URL

- saveProgrammeToURL(event(object))

- onLoad(countrySearchWord), Körs varje gång sidan laddas så man får upp programmkorten för det sparade sökorden. Kallar på getProgrammesBySearchWords



Funktionsled för söksida ------------------------
((onLoad()) ->)
(EL)input för Searchbar (keyup) -> 
    getProgrammesBySearchWords (när klar) -> 
        sortSearchResult (när klar) -> 
            createProgrammeElements (för varje element) -> 
                render

Index ------------------------
*- createCountryElement(db.COUNTRIES[{}]) :: DOM-element, skapar element för de hämtade länderna

- saveCountrySearchWordtoLS(e.target.countryName), lägger till landets namn i localStorage

Jämför ------------------------


Detaljsida ------------------------

 - getProgrammeInfoFromURL(id) :: sparar programme{} i en "sidglobal"-variabel. Körs när sidan laddas

- makeHero(), skapar element av bild, programnamn, universitetsnamn, plats, språk, nivå, termin, visum. Skickar till render(DOM-Element, Hero-div). Körs när sidan laddas

- makeProgrammeStats(), skapar element av antagningspoäng, programnamn, avslutade studier, localStudents, exchangeStudents. Skickar till render(DOM-Element, statistics-div). Körs när sidan laddas

- makeAds(), skapar olika ads i olika storlekar på olika ställen (för detaljsidan). MÅSTE SKAPA 3ST (PER SIDA)!!  Alla 3 skickas till render(DOM-Element, ad#-div) i en loop. Körs när sidan laddas

- makeReviews(programreview, stadsreview), skapar element av reviews skickas till render(DOM-Element, programmeReviews-div), render(DOM-Element, cityReviews-div).
 Gör alla korten och skicka med dem i ett större element. Körs när sidan laddas

 - makeCityInfo(), skapar element av bild, landsnamn, landsinfo. Skickar till render(DOM-Element, Hero-div). Körs när sidan laddas

 -makeWeatherInfo(), skapar element av soldagar från andra länder med samma typ av program. Skickar till render(DOM-Element, weather-div). Körs när sidan laddas


## Globala variabler

*body,
*main,
*navbar,
*footer,
searchWords[]

## CSS-filer

*style  - innehållsförteckning och rubriker
*navbar
*footer
*variables
VARIABLE:
> text sizes 
    var(--font-small): 0.8rem;
    var(--font-default): 1rem;
    var(--font-large): 1.2rem;
> margin sizes
    var(--space-small): 10px; 
    var(--space-medium): 17.5px;
    var(--space-large): 35px;
> iconer
    var(--icon-small): var(--space-medium);
    var(--icon-small): calc(  var(--space-medium) +  var(--space-small) );
> specials
    var(--border-round): 50%;
    var(--border-squared): 5%;
    var(--shadow): 0px 0px 2px var(--black);

> colors
    var(--primary): white;
    var(--secondary): green;
    var(--accent): blue;
    var(--elevated-background):grey-ish;
    var(--black):black;


FONTS:
> title size
    .title-large
    .title-medium
    .title-small
    .title-xsmall
> paragraph size  
    .text-small
    .text-default
    .text-large
> weight
    .bold
    .light
> special  
    .title-hero

BUTTONS:
> size
    .button-small
    .button-medium
    .button-large
> fill
    .button-solid
    .button-stroke
> shape
    .button-square
    .button-round
> special
    .button-cta



